/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
// import { useRef } from 'react'
// import { useFrame } from '@react-three/fiber'

export default function Model(props) {
  const { nodes, materials } = useGLTF("/SSC_gltf.gltf");

  // const SSCRef = useRef()

  // useFrame((state, delta)=>
  // {
  //     SSCRef.current.rotation.z += delta*0.3
  // },[])

  return (
    <group {...props} dispose={null}>
      <group position={[0, 0.491, -0.129]} rotation={[-0.006, Math.PI / 4, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube016.geometry}
          material={materials.cake}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube016_1.geometry}
          material={materials.cream}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube016_2.geometry}
          material={materials.whipcream}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube016_3.geometry}
          material={materials.strawberry}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube016_4.geometry}
          material={materials.strawberry_stem}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder001.geometry}
        material={materials.plate}
        position={[0.017, 0.025, -0.034]}
        scale={[0.863, 1, 0.863]}
      />
    </group>
  );
}

useGLTF.preload("/SSC_gltf.gltf");